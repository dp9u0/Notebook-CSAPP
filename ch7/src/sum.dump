
sum.o:     file format elf64-x86-64
sum.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000045  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  00000085  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  00000085  2**0
                  ALLOC
  3 .comment      0000002b  0000000000000000  0000000000000000  00000085  2**0
                  CONTENTS, READONLY
  4 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000b0  2**0
                  CONTENTS, READONLY
  5 .eh_frame     00000038  0000000000000000  0000000000000000  000000b0  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*  0000000000000000 sum.c
0000000000000000 l    d  .text  0000000000000000 .text
0000000000000000 l    d  .data  0000000000000000 .data
0000000000000000 l    d  .bss  0000000000000000 .bss
0000000000000000 l    d  .note.GNU-stack  0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame  0000000000000000 .eh_frame
0000000000000000 l    d  .comment  0000000000000000 .comment
0000000000000000 g     F .text  0000000000000045 sum



Disassembly of section .text:

0000000000000000 <sum>:
   0:  55                     push   %rbp
   1:  48 89 e5               mov    %rsp,%rbp
   4:  48 89 7d e8            mov    %rdi,-0x18(%rbp)
   8:  89 75 e4               mov    %esi,-0x1c(%rbp)
   b:  c7 45 fc 00 00 00 00   movl   $0x0,-0x4(%rbp)
  12:  c7 45 f8 00 00 00 00   movl   $0x0,-0x8(%rbp)
  19:  eb 1d                  jmp    38 <sum+0x38>
  1b:  8b 45 f8               mov    -0x8(%rbp),%eax
  1e:  48 98                  cltq   
  20:  48 8d 14 85 00 00 00   lea    0x0(,%rax,4),%rdx
  27:  00 
  28:  48 8b 45 e8            mov    -0x18(%rbp),%rax
  2c:  48 01 d0               add    %rdx,%rax
  2f:  8b 00                  mov    (%rax),%eax
  31:  01 45 fc               add    %eax,-0x4(%rbp)
  34:  83 45 f8 01            addl   $0x1,-0x8(%rbp)
  38:  8b 45 f8               mov    -0x8(%rbp),%eax
  3b:  3b 45 e4               cmp    -0x1c(%rbp),%eax
  3e:  7c db                  jl     1b <sum+0x1b>
  40:  8b 45 fc               mov    -0x4(%rbp),%eax
  43:  5d                     pop    %rbp
  44:  c3                     retq   

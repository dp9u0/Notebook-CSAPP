
libvector.so:     file format elf64-x86-64
libvector.so
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000004c0

Program Header:
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000000754 memsz 0x0000000000000754 flags r-x
    LOAD off    0x0000000000000e80 vaddr 0x0000000000200e80 paddr 0x0000000000200e80 align 2**21
         filesz 0x00000000000001a0 memsz 0x00000000000001a8 flags rw-
 DYNAMIC off    0x0000000000000e90 vaddr 0x0000000000200e90 paddr 0x0000000000200e90 align 2**3
         filesz 0x0000000000000150 memsz 0x0000000000000150 flags rw-
    NOTE off    0x00000000000001c8 vaddr 0x00000000000001c8 paddr 0x00000000000001c8 align 2**2
         filesz 0x0000000000000024 memsz 0x0000000000000024 flags r--
EH_FRAME off    0x0000000000000688 vaddr 0x0000000000000688 paddr 0x0000000000000688 align 2**2
         filesz 0x000000000000002c memsz 0x000000000000002c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e80 vaddr 0x0000000000200e80 paddr 0x0000000000200e80 align 2**0
         filesz 0x0000000000000180 memsz 0x0000000000000180 flags r--

Dynamic Section:
  INIT                 0x0000000000000480
  FINI                 0x000000000000067c
  INIT_ARRAY           0x0000000000200e80
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200e88
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x00000000000001f0
  STRTAB               0x0000000000000350
  SYMTAB               0x0000000000000230
  STRSZ                0x0000000000000088
  SYMENT               0x0000000000000018
  PLTGOT               0x0000000000201000
  RELA                 0x00000000000003d8
  RELASZ               0x00000000000000a8
  RELAENT              0x0000000000000018
  RELACOUNT            0x0000000000000003

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .note.gnu.build-id 00000024  00000000000001c8  00000000000001c8  000001c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .gnu.hash     00000040  00000000000001f0  00000000000001f0  000001f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .dynsym       00000120  0000000000000230  0000000000000230  00000230  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .dynstr       00000088  0000000000000350  0000000000000350  00000350  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rela.dyn     000000a8  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .init         00000017  0000000000000480  0000000000000480  00000480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .plt          00000010  00000000000004a0  00000000000004a0  000004a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .plt.got      00000008  00000000000004b0  00000000000004b0  000004b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text         000001ba  00000000000004c0  00000000000004c0  000004c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .fini         00000009  000000000000067c  000000000000067c  0000067c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .eh_frame_hdr 0000002c  0000000000000688  0000000000000688  00000688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .eh_frame     0000009c  00000000000006b8  00000000000006b8  000006b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .init_array   00000008  0000000000200e80  0000000000200e80  00000e80  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 13 .fini_array   00000008  0000000000200e88  0000000000200e88  00000e88  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 14 .dynamic      00000150  0000000000200e90  0000000000200e90  00000e90  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 15 .got          00000020  0000000000200fe0  0000000000200fe0  00000fe0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 16 .got.plt      00000018  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 17 .data         00000008  0000000000201018  0000000000201018  00001018  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .bss          00000008  0000000000201020  0000000000201020  00001020  2**0
                  ALLOC
 19 .comment      0000002a  0000000000000000  0000000000000000  00001020  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000000001c8 l    d  .note.gnu.build-id	0000000000000000 .note.gnu.build-id
00000000000001f0 l    d  .gnu.hash	0000000000000000 .gnu.hash
0000000000000230 l    d  .dynsym	0000000000000000 .dynsym
0000000000000350 l    d  .dynstr	0000000000000000 .dynstr
00000000000003d8 l    d  .rela.dyn	0000000000000000 .rela.dyn
0000000000000480 l    d  .init	0000000000000000 .init
00000000000004a0 l    d  .plt	0000000000000000 .plt
00000000000004b0 l    d  .plt.got	0000000000000000 .plt.got
00000000000004c0 l    d  .text	0000000000000000 .text
000000000000067c l    d  .fini	0000000000000000 .fini
0000000000000688 l    d  .eh_frame_hdr	0000000000000000 .eh_frame_hdr
00000000000006b8 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000200e80 l    d  .init_array	0000000000000000 .init_array
0000000000200e88 l    d  .fini_array	0000000000000000 .fini_array
0000000000200e90 l    d  .dynamic	0000000000000000 .dynamic
0000000000200fe0 l    d  .got	0000000000000000 .got
0000000000201000 l    d  .got.plt	0000000000000000 .got.plt
0000000000201018 l    d  .data	0000000000000000 .data
0000000000201020 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 crtstuff.c
00000000000004c0 l     F .text	0000000000000000 deregister_tm_clones
0000000000000500 l     F .text	0000000000000000 register_tm_clones
0000000000000550 l     F .text	0000000000000000 __do_global_dtors_aux
0000000000201020 l     O .bss	0000000000000001 completed.7696
0000000000200e88 l     O .fini_array	0000000000000000 __do_global_dtors_aux_fini_array_entry
0000000000000590 l     F .text	0000000000000000 frame_dummy
0000000000200e80 l     O .init_array	0000000000000000 __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000 addvec.c
0000000000000000 l    df *ABS*	0000000000000000 multvec.c
0000000000000000 l    df *ABS*	0000000000000000 crtstuff.c
0000000000000750 l     O .eh_frame	0000000000000000 __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000 
0000000000200e90 l     O .dynamic	0000000000000000 _DYNAMIC
0000000000201020 l     O .data	0000000000000000 __TMC_END__
0000000000201018 l     O .data	0000000000000000 __dso_handle
0000000000000688 l       .eh_frame_hdr	0000000000000000 __GNU_EH_FRAME_HDR
0000000000201000 l     O .got.plt	0000000000000000 _GLOBAL_OFFSET_TABLE_
000000000000059a g     F .text	000000000000006f addvec
0000000000000000  w      *UND*	0000000000000000 __cxa_finalize
0000000000000480 g     F .init	0000000000000000 _init
0000000000000000  w      *UND*	0000000000000000 _ITM_registerTMCloneTable
0000000000000000  w      *UND*	0000000000000000 _ITM_deregisterTMCloneTable
0000000000201020 g       .bss	0000000000000000 __bss_start
0000000000000609 g     F .text	0000000000000071 multvec
000000000000067c g     F .fini	0000000000000000 _fini
0000000000201020 g       .data	0000000000000000 _edata
0000000000201028 g       .bss	0000000000000000 _end
0000000000000000  w      *UND*	0000000000000000 __gmon_start__



Disassembly of section .note.gnu.build-id:

00000000000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    $0x0,%al
 1ca:	00 00                	add    %al,(%rax)
 1cc:	14 00                	adc    $0x0,%al
 1ce:	00 00                	add    %al,(%rax)
 1d0:	03 00                	add    (%rax),%eax
 1d2:	00 00                	add    %al,(%rax)
 1d4:	47                   	rex.RXB
 1d5:	4e 55                	rex.WRX push %rbp
 1d7:	00 c3                	add    %al,%bl
 1d9:	44 34 0b             	rex.R xor $0xb,%al
 1dc:	19 1f                	sbb    %ebx,(%rdi)
 1de:	1a 1f                	sbb    (%rdi),%bl
 1e0:	64 4a 7a 26          	fs rex.WX jp 20a <_init-0x276>
 1e4:	f9                   	stc    
 1e5:	68 51 d7 ff 46       	pushq  $0x46ffd751
 1ea:	c9                   	leaveq 
 1eb:	93                   	xchg   %eax,%ebx

Disassembly of section .gnu.hash:

00000000000001f0 <.gnu.hash>:
 1f0:	03 00                	add    (%rax),%eax
 1f2:	00 00                	add    %al,(%rax)
 1f4:	05 00 00 00 01       	add    $0x1000000,%eax
 1f9:	00 00                	add    %al,(%rax)
 1fb:	00 06                	add    %al,(%rsi)
 1fd:	00 00                	add    %al,(%rax)
 1ff:	00 88 c8 20 01 20    	add    %cl,0x200120c8(%rax)
 205:	14 40                	adc    $0x40,%al
 207:	09 05 00 00 00 07    	or     %eax,0x7000000(%rip)        # 700020d <_end+0x6dff1e5>
 20d:	00 00                	add    %al,(%rax)
 20f:	00 09                	add    %cl,(%rcx)
 211:	00 00                	add    %al,(%rax)
 213:	00 42 45             	add    %al,0x45(%rdx)
 216:	d5                   	(bad)  
 217:	ec                   	in     (%dx),%al
 218:	bb e3 92 7c b8       	mov    $0xb87c92e3,%ebx
 21d:	8d                   	(bad)  
 21e:	f1                   	icebp  
 21f:	0e                   	(bad)  
 220:	d9 71 58             	fnstenv 0x58(%rcx)
 223:	1c 6c                	sbb    $0x6c,%al
 225:	d5                   	(bad)  
 226:	6d                   	insl   (%dx),%es:(%rdi)
 227:	f1                   	icebp  
 228:	e4 02                	in     $0x2,%al
 22a:	1b e3                	sbb    %ebx,%esp
 22c:	eb d3                	jmp    201 <_init-0x27f>
 22e:	ef                   	out    %eax,(%dx)
 22f:	0e                   	(bad)  

Disassembly of section .dynsym:

0000000000000230 <.dynsym>:
	...
 248:	52                   	push   %rdx
 249:	00 00                	add    %al,(%rax)
 24b:	00 20                	add    %ah,(%rax)
	...
 25d:	00 00                	add    %al,(%rax)
 25f:	00 38                	add    %bh,(%rax)
 261:	00 00                	add    %al,(%rax)
 263:	00 20                	add    %ah,(%rax)
	...
 275:	00 00                	add    %al,(%rax)
 277:	00 1c 00             	add    %bl,(%rax,%rax,1)
 27a:	00 00                	add    %al,(%rax)
 27c:	20 00                	and    %al,(%rax)
	...
 28e:	00 00                	add    %al,(%rax)
 290:	01 00                	add    %eax,(%rax)
 292:	00 00                	add    %al,(%rax)
 294:	20 00                	and    %al,(%rax)
	...
 2a6:	00 00                	add    %al,(%rax)
 2a8:	70 00                	jo     2aa <_init-0x1d6>
 2aa:	00 00                	add    %al,(%rax)
 2ac:	10 00                	adc    %al,(%rax)
 2ae:	12 00                	adc    (%rax),%al
 2b0:	20 10                	and    %dl,(%rax)
 2b2:	20 00                	and    %al,(%rax)
	...
 2c0:	83 00 00             	addl   $0x0,(%rax)
 2c3:	00 10                	add    %dl,(%rax)
 2c5:	00 13                	add    %dl,(%rbx)
 2c7:	00 28                	add    %ch,(%rax)
 2c9:	10 20                	adc    %ah,(%rax)
	...
 2d7:	00 10                	add    %dl,(%rax)
 2d9:	00 00                	add    %al,(%rax)
 2db:	00 12                	add    %dl,(%rdx)
 2dd:	00 06                	add    %al,(%rsi)
 2df:	00 80 04 00 00 00    	add    %al,0x4(%rax)
	...
 2ed:	00 00                	add    %al,(%rax)
 2ef:	00 77 00             	add    %dh,0x0(%rdi)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	10 00                	adc    %al,(%rax)
 2f6:	13 00                	adc    (%rax),%eax
 2f8:	20 10                	and    %dl,(%rax)
 2fa:	20 00                	and    %al,(%rax)
	...
 308:	61                   	(bad)  
 309:	00 00                	add    %al,(%rax)
 30b:	00 12                	add    %dl,(%rdx)
 30d:	00 09                	add    %cl,(%rcx)
 30f:	00 9a 05 00 00 00    	add    %bl,0x5(%rdx)
 315:	00 00                	add    %al,(%rax)
 317:	00 6f 00             	add    %ch,0x0(%rdi)
 31a:	00 00                	add    %al,(%rax)
 31c:	00 00                	add    %al,(%rax)
 31e:	00 00                	add    %al,(%rax)
 320:	68 00 00 00 12       	pushq  $0x12000000
 325:	00 09                	add    %cl,(%rcx)
 327:	00 09                	add    %cl,(%rcx)
 329:	06                   	(bad)  
 32a:	00 00                	add    %al,(%rax)
 32c:	00 00                	add    %al,(%rax)
 32e:	00 00                	add    %al,(%rax)
 330:	71 00                	jno    332 <_init-0x14e>
 332:	00 00                	add    %al,(%rax)
 334:	00 00                	add    %al,(%rax)
 336:	00 00                	add    %al,(%rax)
 338:	16                   	(bad)  
 339:	00 00                	add    %al,(%rax)
 33b:	00 12                	add    %dl,(%rdx)
 33d:	00 0a                	add    %cl,(%rdx)
 33f:	00 7c 06 00          	add    %bh,0x0(%rsi,%rax,1)
	...

Disassembly of section .dynstr:

0000000000000350 <.dynstr>:
 350:	00 5f 5f             	add    %bl,0x5f(%rdi)
 353:	67 6d                	insl   (%dx),%es:(%edi)
 355:	6f                   	outsl  %ds:(%rsi),(%dx)
 356:	6e                   	outsb  %ds:(%rsi),(%dx)
 357:	5f                   	pop    %rdi
 358:	73 74                	jae    3ce <_init-0xb2>
 35a:	61                   	(bad)  
 35b:	72 74                	jb     3d1 <_init-0xaf>
 35d:	5f                   	pop    %rdi
 35e:	5f                   	pop    %rdi
 35f:	00 5f 69             	add    %bl,0x69(%rdi)
 362:	6e                   	outsb  %ds:(%rsi),(%dx)
 363:	69 74 00 5f 66 69 6e 	imul   $0x696e6966,0x5f(%rax,%rax,1),%esi
 36a:	69 
 36b:	00 5f 49             	add    %bl,0x49(%rdi)
 36e:	54                   	push   %rsp
 36f:	4d 5f                	rex.WRB pop %r15
 371:	64 65 72 65          	fs gs jb 3da <_init-0xa6>
 375:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 37c:	4d 
 37d:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 37f:	6f                   	outsl  %ds:(%rsi),(%dx)
 380:	6e                   	outsb  %ds:(%rsi),(%dx)
 381:	65 54                	gs push %rsp
 383:	61                   	(bad)  
 384:	62                   	(bad)  
 385:	6c                   	insb   (%dx),%es:(%rdi)
 386:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 38a:	54                   	push   %rsp
 38b:	4d 5f                	rex.WRB pop %r15
 38d:	72 65                	jb     3f4 <_init-0x8c>
 38f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 396:	4d 
 397:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 399:	6f                   	outsl  %ds:(%rsi),(%dx)
 39a:	6e                   	outsb  %ds:(%rsi),(%dx)
 39b:	65 54                	gs push %rsp
 39d:	61                   	(bad)  
 39e:	62                   	(bad)  
 39f:	6c                   	insb   (%dx),%es:(%rdi)
 3a0:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3a4:	63 78 61             	movslq 0x61(%rax),%edi
 3a7:	5f                   	pop    %rdi
 3a8:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3ae:	7a 65                	jp     415 <_init-0x6b>
 3b0:	00 61 64             	add    %ah,0x64(%rcx)
 3b3:	64 76 65             	fs jbe 41b <_init-0x65>
 3b6:	63 00                	movslq (%rax),%eax
 3b8:	6d                   	insl   (%dx),%es:(%rdi)
 3b9:	75 6c                	jne    427 <_init-0x59>
 3bb:	74 76                	je     433 <_init-0x4d>
 3bd:	65 63 00             	movslq %gs:(%rax),%eax
 3c0:	5f                   	pop    %rdi
 3c1:	65 64 61             	gs fs (bad) 
 3c4:	74 61                	je     427 <_init-0x59>
 3c6:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3c9:	62 73                	(bad)  
 3cb:	73 5f                	jae    42c <_init-0x54>
 3cd:	73 74                	jae    443 <_init-0x3d>
 3cf:	61                   	(bad)  
 3d0:	72 74                	jb     446 <_init-0x3a>
 3d2:	00 5f 65             	add    %bl,0x65(%rdi)
 3d5:	6e                   	outsb  %ds:(%rsi),(%dx)
 3d6:	64                   	fs
	...

Disassembly of section .rela.dyn:

00000000000003d8 <.rela.dyn>:
 3d8:	80 0e 20             	orb    $0x20,(%rsi)
 3db:	00 00                	add    %al,(%rax)
 3dd:	00 00                	add    %al,(%rax)
 3df:	00 08                	add    %cl,(%rax)
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 00                	add    %al,(%rax)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 90 05 00 00 00    	add    %dl,0x5(%rax)
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 88 0e 20 00 00    	add    %cl,0x200e(%rax)
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 08                	add    %cl,(%rax)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 00                	add    %al,(%rax)
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 50 05             	add    %dl,0x5(%rax)
 402:	00 00                	add    %al,(%rax)
 404:	00 00                	add    %al,(%rax)
 406:	00 00                	add    %al,(%rax)
 408:	18 10                	sbb    %dl,(%rax)
 40a:	20 00                	and    %al,(%rax)
 40c:	00 00                	add    %al,(%rax)
 40e:	00 00                	add    %al,(%rax)
 410:	08 00                	or     %al,(%rax)
 412:	00 00                	add    %al,(%rax)
 414:	00 00                	add    %al,(%rax)
 416:	00 00                	add    %al,(%rax)
 418:	18 10                	sbb    %dl,(%rax)
 41a:	20 00                	and    %al,(%rax)
 41c:	00 00                	add    %al,(%rax)
 41e:	00 00                	add    %al,(%rax)
 420:	e0 0f                	loopne 431 <_init-0x4f>
 422:	20 00                	and    %al,(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	06                   	(bad)  
 429:	00 00                	add    %al,(%rax)
 42b:	00 01                	add    %al,(%rcx)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 e8                	add    %ch,%al
 439:	0f 20 00             	mov    %cr0,%rax
 43c:	00 00                	add    %al,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	06                   	(bad)  
 441:	00 00                	add    %al,(%rax)
 443:	00 02                	add    %al,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 f0                	add    %dh,%al
 451:	0f 20 00             	mov    %cr0,%rax
 454:	00 00                	add    %al,(%rax)
 456:	00 00                	add    %al,(%rax)
 458:	06                   	(bad)  
 459:	00 00                	add    %al,(%rax)
 45b:	00 03                	add    %al,(%rbx)
	...
 465:	00 00                	add    %al,(%rax)
 467:	00 f8                	add    %bh,%al
 469:	0f 20 00             	mov    %cr0,%rax
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	06                   	(bad)  
 471:	00 00                	add    %al,(%rax)
 473:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000000480 <_init>:
 480:	48 83 ec 08          	sub    $0x8,%rsp
 484:	48 8b 05 6d 0b 20 00 	mov    0x200b6d(%rip),%rax        # 200ff8 <__gmon_start__>
 48b:	48 85 c0             	test   %rax,%rax
 48e:	74 02                	je     492 <_init+0x12>
 490:	ff d0                	callq  *%rax
 492:	48 83 c4 08          	add    $0x8,%rsp
 496:	c3                   	retq   

Disassembly of section .plt:

00000000000004a0 <.plt>:
 4a0:	ff 35 62 0b 20 00    	pushq  0x200b62(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 4a6:	ff 25 64 0b 20 00    	jmpq   *0x200b64(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 4ac:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

00000000000004b0 <__cxa_finalize@plt>:
 4b0:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 200fe0 <__cxa_finalize>
 4b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000004c0 <deregister_tm_clones>:
 4c0:	48 8d 3d 59 0b 20 00 	lea    0x200b59(%rip),%rdi        # 201020 <_edata>
 4c7:	55                   	push   %rbp
 4c8:	48 8d 05 51 0b 20 00 	lea    0x200b51(%rip),%rax        # 201020 <_edata>
 4cf:	48 39 f8             	cmp    %rdi,%rax
 4d2:	48 89 e5             	mov    %rsp,%rbp
 4d5:	74 19                	je     4f0 <deregister_tm_clones+0x30>
 4d7:	48 8b 05 12 0b 20 00 	mov    0x200b12(%rip),%rax        # 200ff0 <_ITM_deregisterTMCloneTable>
 4de:	48 85 c0             	test   %rax,%rax
 4e1:	74 0d                	je     4f0 <deregister_tm_clones+0x30>
 4e3:	5d                   	pop    %rbp
 4e4:	ff e0                	jmpq   *%rax
 4e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 4ed:	00 00 00 
 4f0:	5d                   	pop    %rbp
 4f1:	c3                   	retq   
 4f2:	0f 1f 40 00          	nopl   0x0(%rax)
 4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 4fd:	00 00 00 

0000000000000500 <register_tm_clones>:
 500:	48 8d 3d 19 0b 20 00 	lea    0x200b19(%rip),%rdi        # 201020 <_edata>
 507:	48 8d 35 12 0b 20 00 	lea    0x200b12(%rip),%rsi        # 201020 <_edata>
 50e:	55                   	push   %rbp
 50f:	48 29 fe             	sub    %rdi,%rsi
 512:	48 89 e5             	mov    %rsp,%rbp
 515:	48 c1 fe 03          	sar    $0x3,%rsi
 519:	48 89 f0             	mov    %rsi,%rax
 51c:	48 c1 e8 3f          	shr    $0x3f,%rax
 520:	48 01 c6             	add    %rax,%rsi
 523:	48 d1 fe             	sar    %rsi
 526:	74 18                	je     540 <register_tm_clones+0x40>
 528:	48 8b 05 b9 0a 20 00 	mov    0x200ab9(%rip),%rax        # 200fe8 <_ITM_registerTMCloneTable>
 52f:	48 85 c0             	test   %rax,%rax
 532:	74 0c                	je     540 <register_tm_clones+0x40>
 534:	5d                   	pop    %rbp
 535:	ff e0                	jmpq   *%rax
 537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 53e:	00 00 
 540:	5d                   	pop    %rbp
 541:	c3                   	retq   
 542:	0f 1f 40 00          	nopl   0x0(%rax)
 546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 54d:	00 00 00 

0000000000000550 <__do_global_dtors_aux>:
 550:	80 3d c9 0a 20 00 00 	cmpb   $0x0,0x200ac9(%rip)        # 201020 <_edata>
 557:	75 2f                	jne    588 <__do_global_dtors_aux+0x38>
 559:	48 83 3d 7f 0a 20 00 	cmpq   $0x0,0x200a7f(%rip)        # 200fe0 <__cxa_finalize>
 560:	00 
 561:	55                   	push   %rbp
 562:	48 89 e5             	mov    %rsp,%rbp
 565:	74 0c                	je     573 <__do_global_dtors_aux+0x23>
 567:	48 8b 3d aa 0a 20 00 	mov    0x200aaa(%rip),%rdi        # 201018 <__dso_handle>
 56e:	e8 3d ff ff ff       	callq  4b0 <__cxa_finalize@plt>
 573:	e8 48 ff ff ff       	callq  4c0 <deregister_tm_clones>
 578:	c6 05 a1 0a 20 00 01 	movb   $0x1,0x200aa1(%rip)        # 201020 <_edata>
 57f:	5d                   	pop    %rbp
 580:	c3                   	retq   
 581:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 588:	f3 c3                	repz retq 
 58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000590 <frame_dummy>:
 590:	55                   	push   %rbp
 591:	48 89 e5             	mov    %rsp,%rbp
 594:	5d                   	pop    %rbp
 595:	e9 66 ff ff ff       	jmpq   500 <register_tm_clones>

000000000000059a <addvec>:
 59a:	55                   	push   %rbp
 59b:	48 89 e5             	mov    %rsp,%rbp
 59e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 5a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 5a6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 5aa:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 5ad:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 5b4:	eb 48                	jmp    5fe <addvec+0x64>
 5b6:	8b 45 fc             	mov    -0x4(%rbp),%eax
 5b9:	48 98                	cltq   
 5bb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 5c2:	00 
 5c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 5c7:	48 01 d0             	add    %rdx,%rax
 5ca:	8b 08                	mov    (%rax),%ecx
 5cc:	8b 45 fc             	mov    -0x4(%rbp),%eax
 5cf:	48 98                	cltq   
 5d1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 5d8:	00 
 5d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 5dd:	48 01 d0             	add    %rdx,%rax
 5e0:	8b 10                	mov    (%rax),%edx
 5e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 5e5:	48 98                	cltq   
 5e7:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
 5ee:	00 
 5ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 5f3:	48 01 f0             	add    %rsi,%rax
 5f6:	01 ca                	add    %ecx,%edx
 5f8:	89 10                	mov    %edx,(%rax)
 5fa:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 5fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
 601:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
 604:	7c b0                	jl     5b6 <addvec+0x1c>
 606:	90                   	nop
 607:	5d                   	pop    %rbp
 608:	c3                   	retq   

0000000000000609 <multvec>:
 609:	55                   	push   %rbp
 60a:	48 89 e5             	mov    %rsp,%rbp
 60d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 611:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 615:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 619:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 61c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 623:	eb 4a                	jmp    66f <multvec+0x66>
 625:	8b 45 fc             	mov    -0x4(%rbp),%eax
 628:	48 98                	cltq   
 62a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 631:	00 
 632:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 636:	48 01 d0             	add    %rdx,%rax
 639:	8b 08                	mov    (%rax),%ecx
 63b:	8b 45 fc             	mov    -0x4(%rbp),%eax
 63e:	48 98                	cltq   
 640:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 647:	00 
 648:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 64c:	48 01 d0             	add    %rdx,%rax
 64f:	8b 00                	mov    (%rax),%eax
 651:	8b 55 fc             	mov    -0x4(%rbp),%edx
 654:	48 63 d2             	movslq %edx,%rdx
 657:	48 8d 34 95 00 00 00 	lea    0x0(,%rdx,4),%rsi
 65e:	00 
 65f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 663:	48 01 f2             	add    %rsi,%rdx
 666:	0f af c1             	imul   %ecx,%eax
 669:	89 02                	mov    %eax,(%rdx)
 66b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 66f:	8b 45 fc             	mov    -0x4(%rbp),%eax
 672:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
 675:	7c ae                	jl     625 <multvec+0x1c>
 677:	90                   	nop
 678:	5d                   	pop    %rbp
 679:	c3                   	retq   

Disassembly of section .fini:

000000000000067c <_fini>:
 67c:	48 83 ec 08          	sub    $0x8,%rsp
 680:	48 83 c4 08          	add    $0x8,%rsp
 684:	c3                   	retq   

Disassembly of section .eh_frame_hdr:

0000000000000688 <__GNU_EH_FRAME_HDR>:
 688:	01 1b                	add    %ebx,(%rbx)
 68a:	03 3b                	add    (%rbx),%edi
 68c:	2c 00                	sub    $0x0,%al
 68e:	00 00                	add    %al,(%rax)
 690:	04 00                	add    $0x0,%al
 692:	00 00                	add    %al,(%rax)
 694:	18 fe                	sbb    %bh,%dh
 696:	ff                   	(bad)  
 697:	ff 48 00             	decl   0x0(%rax)
 69a:	00 00                	add    %al,(%rax)
 69c:	28 fe                	sub    %bh,%dh
 69e:	ff                   	(bad)  
 69f:	ff 70 00             	pushq  0x0(%rax)
 6a2:	00 00                	add    %al,(%rax)
 6a4:	12 ff                	adc    %bh,%bh
 6a6:	ff                   	(bad)  
 6a7:	ff 88 00 00 00 81    	decl   -0x7f000000(%rax)
 6ad:	ff                   	(bad)  
 6ae:	ff                   	(bad)  
 6af:	ff                   	.byte 0xff
 6b0:	a8 00                	test   $0x0,%al
	...

Disassembly of section .eh_frame:

00000000000006b8 <__FRAME_END__-0x98>:
 6b8:	14 00                	adc    $0x0,%al
 6ba:	00 00                	add    %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	01 7a 52             	add    %edi,0x52(%rdx)
 6c3:	00 01                	add    %al,(%rcx)
 6c5:	78 10                	js     6d7 <__GNU_EH_FRAME_HDR+0x4f>
 6c7:	01 1b                	add    %ebx,(%rbx)
 6c9:	0c 07                	or     $0x7,%al
 6cb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 6d1:	00 00                	add    %al,(%rax)
 6d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
 6d6:	00 00                	add    %al,(%rax)
 6d8:	c8 fd ff ff          	enterq $0xfffd,$0xff
 6dc:	10 00                	adc    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	00 0e                	add    %cl,(%rsi)
 6e2:	10 46 0e             	adc    %al,0xe(%rsi)
 6e5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 6e8:	0b 77 08             	or     0x8(%rdi),%esi
 6eb:	80 00 3f             	addb   $0x3f,(%rax)
 6ee:	1a 3b                	sbb    (%rbx),%bh
 6f0:	2a 33                	sub    (%rbx),%dh
 6f2:	24 22                	and    $0x22,%al
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	14 00                	adc    $0x0,%al
 6fa:	00 00                	add    %al,(%rax)
 6fc:	44 00 00             	add    %r8b,(%rax)
 6ff:	00 b0 fd ff ff 08    	add    %dh,0x8fffffd(%rax)
	...
 70d:	00 00                	add    %al,(%rax)
 70f:	00 1c 00             	add    %bl,(%rax,%rax,1)
 712:	00 00                	add    %al,(%rax)
 714:	5c                   	pop    %rsp
 715:	00 00                	add    %al,(%rax)
 717:	00 82 fe ff ff 6f    	add    %al,0x6ffffffe(%rdx)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 00                	add    %al,(%rax)
 721:	41 0e                	rex.B (bad) 
 723:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 729:	02 6a 0c             	add    0xc(%rdx),%ch
 72c:	07                   	(bad)  
 72d:	08 00                	or     %al,(%rax)
 72f:	00 1c 00             	add    %bl,(%rax,%rax,1)
 732:	00 00                	add    %al,(%rax)
 734:	7c 00                	jl     736 <__GNU_EH_FRAME_HDR+0xae>
 736:	00 00                	add    %al,(%rax)
 738:	d1 fe                	sar    %esi
 73a:	ff                   	(bad)  
 73b:	ff 71 00             	pushq  0x0(%rcx)
 73e:	00 00                	add    %al,(%rax)
 740:	00 41 0e             	add    %al,0xe(%rcx)
 743:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 749:	02 6c 0c 07          	add    0x7(%rsp,%rcx,1),%ch
 74d:	08 00                	or     %al,(%rax)
	...

0000000000000750 <__FRAME_END__>:
 750:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200e80 <__frame_dummy_init_array_entry>:
  200e80:	90                   	nop
  200e81:	05 00 00 00 00       	add    $0x0,%eax
	...

Disassembly of section .fini_array:

0000000000200e88 <__do_global_dtors_aux_fini_array_entry>:
  200e88:	50                   	push   %rax
  200e89:	05 00 00 00 00       	add    $0x0,%eax
	...

Disassembly of section .dynamic:

0000000000200e90 <_DYNAMIC>:
  200e90:	0c 00                	or     $0x0,%al
  200e92:	00 00                	add    %al,(%rax)
  200e94:	00 00                	add    %al,(%rax)
  200e96:	00 00                	add    %al,(%rax)
  200e98:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
  200e9c:	00 00                	add    %al,(%rax)
  200e9e:	00 00                	add    %al,(%rax)
  200ea0:	0d 00 00 00 00       	or     $0x0,%eax
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 7c 06 00          	add    %bh,0x0(%rsi,%rax,1)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 19                	add    %bl,(%rcx)
  200eb1:	00 00                	add    %al,(%rax)
  200eb3:	00 00                	add    %al,(%rax)
  200eb5:	00 00                	add    %al,(%rax)
  200eb7:	00 80 0e 20 00 00    	add    %al,0x200e(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 1b                	add    %bl,(%rbx)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 08                	add    %cl,(%rax)
  200ec9:	00 00                	add    %al,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 1a                	add    %bl,(%rdx)
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 88 0e 20 00 00    	add    %cl,0x200e(%rax)
  200edd:	00 00                	add    %al,(%rax)
  200edf:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	08 00                	or     %al,(%rax)
  200eea:	00 00                	add    %al,(%rax)
  200eec:	00 00                	add    %al,(%rax)
  200eee:	00 00                	add    %al,(%rax)
  200ef0:	f5                   	cmc    
  200ef1:	fe                   	(bad)  
  200ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 f0                	add    %dh,%al
  200ef9:	01 00                	add    %eax,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200f05 <_DYNAMIC+0x75>
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 50 03             	add    %dl,0x3(%rax)
  200f0a:	00 00                	add    %al,(%rax)
  200f0c:	00 00                	add    %al,(%rax)
  200f0e:	00 00                	add    %al,(%rax)
  200f10:	06                   	(bad)  
  200f11:	00 00                	add    %al,(%rax)
  200f13:	00 00                	add    %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 30                	add    %dh,(%rax)
  200f19:	02 00                	add    (%rax),%al
  200f1b:	00 00                	add    %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 0a                	add    %cl,(%rdx)
  200f21:	00 00                	add    %al,(%rax)
  200f23:	00 00                	add    %al,(%rax)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 88 00 00 00 00    	add    %cl,0x0(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 0b                	add    %cl,(%rbx)
  200f31:	00 00                	add    %al,(%rax)
  200f33:	00 00                	add    %al,(%rax)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 18                	add    %bl,(%rax)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 03                	add    %al,(%rbx)
	...
  200f49:	10 20                	adc    %ah,(%rax)
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 07                	add    %al,(%rdi)
  200f51:	00 00                	add    %al,(%rax)
  200f53:	00 00                	add    %al,(%rax)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 d8                	add    %bl,%al
  200f59:	03 00                	add    (%rax),%eax
  200f5b:	00 00                	add    %al,(%rax)
  200f5d:	00 00                	add    %al,(%rax)
  200f5f:	00 08                	add    %cl,(%rax)
  200f61:	00 00                	add    %al,(%rax)
  200f63:	00 00                	add    %al,(%rax)
  200f65:	00 00                	add    %al,(%rax)
  200f67:	00 a8 00 00 00 00    	add    %ch,0x0(%rax)
  200f6d:	00 00                	add    %al,(%rax)
  200f6f:	00 09                	add    %cl,(%rcx)
  200f71:	00 00                	add    %al,(%rax)
  200f73:	00 00                	add    %al,(%rax)
  200f75:	00 00                	add    %al,(%rax)
  200f77:	00 18                	add    %bl,(%rax)
  200f79:	00 00                	add    %al,(%rax)
  200f7b:	00 00                	add    %al,(%rax)
  200f7d:	00 00                	add    %al,(%rax)
  200f7f:	00 f9                	add    %bh,%cl
  200f81:	ff                   	(bad)  
  200f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f85:	00 00                	add    %al,(%rax)
  200f87:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fe0 <.got>:
	...

Disassembly of section .got.plt:

0000000000201000 <_GLOBAL_OFFSET_TABLE_>:
  201000:	90                   	nop
  201001:	0e                   	(bad)  
  201002:	20 00                	and    %al,(%rax)
	...

Disassembly of section .data:

0000000000201018 <__dso_handle>:
  201018:	18 10                	sbb    %dl,(%rax)
  20101a:	20 00                	and    %al,(%rax)
  20101c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201020 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x408>
   a:	74 75                	je     81 <_init-0x3ff>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 32 37 75 62    	xor    %ch,0x62753732(%rip)        # 62753749 <_end+0x62552721>
  17:	75 6e                	jne    87 <_init-0x3f9>
  19:	74 75                	je     90 <_init-0x3f0>
  1b:	31 7e 31             	xor    %edi,0x31(%rsi)
  1e:	38 2e                	cmp    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 37                	and    %dh,(%rdi)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
